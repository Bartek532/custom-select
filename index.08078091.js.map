{"mappings":"kBAOaA,cAOCC,QACLC,gBAAkBD,OAClBE,eAAiBC,EACpBC,SAASC,iBAAgB,gBAEtBC,eAAiBF,SAASG,cAAa,YACvCC,aAAeJ,SAASG,cAAa,aACrCE,mBAAqBL,SAASG,cAAa,MAChDG,EAAoBC,MACpBX,EAAQY,MAAMC,QAAO,OACrBb,EAAQc,MAAKH,KAAML,iDAIPJ,eAAea,MAAKC,GAAUA,EAAOC,iDAIrCf,eAAegB,QAAOP,KAAMQ,gBAG1CC,YAAYC,SACJC,EAAiBX,KAAQT,eAAea,MAC5CC,GAAUA,EAAOK,QAAUA,IAGvBE,EAAkBZ,KAAQQ,eAChCI,EAAmBN,UAAW,EAC9BM,EAAmBvB,QAAQiB,UAAW,EAEtCK,EAAkBL,UAAW,EAC7BK,EAAkBtB,QAAQiB,UAAW,OAEhCT,aAAagB,UAAYF,EAAkBG,WAE3ChB,mBACFiB,cAAa,gBAAiBH,EAAmBF,WACjDM,UAAUC,OAAM,kBAEbC,EAAkBlB,KAAQF,mBAAmBiB,cAAa,gBAC9CJ,EAAkBD,WAGpCQ,EAAmBF,UAAUG,IAAG,YAChCD,EAAmBE,eAAc,CAAGC,MAAK,iBAIzCC,EACAC,EAAU,SAERxB,EAAwByB,IAC5BA,EAAO7B,eAAeqB,UAAUG,IAAG,yBACnCK,EAAO7B,eAAe8B,SAAW,EAEjCD,EAAO3B,aAAamB,UAAUG,IAAG,gCACjCK,EAAO3B,aAAagB,UAAYW,EAAOhB,eAAeM,MACtDU,EAAO7B,eAAe+B,OAAOF,EAAO3B,cAEpC2B,EAAOjC,eAAeoC,SAAQC,UACtBvB,EAASZ,SAASG,cAAa,MACrCS,EAAOW,UAAUG,IAAG,mCACpBd,EAAOW,UAAUa,OAAM,WAAaD,EAActB,UAElDD,EAAOyB,iBAAgB,SAAQ,KAC7BN,EAAOO,YAAYH,EAAclB,OACjCc,EAAO1B,mBAAmBkB,UAAUC,OAAM,WAE5CZ,EAAOQ,UAAYe,EAAcd,MACjCT,EAAO2B,QAAQtB,MAAQkB,EAAclB,MACrCc,EAAO1B,mBAAmB4B,OAAOrB,MAGnCmB,EAAO1B,mBAAmBkB,UAAUG,IAAG,8BACvCK,EAAO7B,eAAe+B,OAAOF,EAAO1B,oBAEpC0B,EAAO3B,aAAaiC,iBAAgB,SAAQ,KAC1CN,EAAO1B,mBAAmBkB,UAAUa,OAAM,WAG5CL,EAAO7B,eAAemC,iBAAgB,QAAO,KAC3CN,EAAO1B,mBAAmBkB,UAAUC,OAAM,WAG5CO,EAAO7B,eAAemC,iBAAgB,WAAYG,WACxCA,EAAEC,kBAENV,EAAO1B,mBAAmBkB,UAAUa,OAAM,mCAIpCM,EACJX,EAAOjC,eAAeiC,EAAOY,oBAAsB,GAEjDD,GACFX,EAAOO,YAAYI,EAAWzB,oCAK1B2B,EACJb,EAAOjC,eAAeiC,EAAOY,oBAAsB,GAEjDC,GACFb,EAAOO,YAAYM,EAAW3B,sCAMhCc,EAAO1B,mBAAmBkB,UAAUC,OAAM,uBAG1CqB,aAAahB,GACbC,GAAcU,EAAEM,IAChBjB,EAAkBkB,YAAU,KAC1BjB,EAAU,KACT,WAEGkB,EAAiBjB,EAAOjC,eAAea,MAAKC,GACzCA,EAAOS,MAAM4B,cAAcC,WAAWpB,KAG3CkB,GACFjB,EAAOO,YAAYU,EAAe/B,aAOtClB,EACJoD,OAEWA,GAASC,KAAIxC,KAEpBK,MAAOL,EAAOK,MACdI,MAAOT,EAAOS,MACdR,SAAUD,EAAOC,SACjBjB,QAASgB,MCvJUZ,SAASC,iBAAgB,aAEjCiC,SAAQrC,QACnBF,EAASE","sources":["select.ts","script.ts"],"sourcesContent":["type SelectFormattedOption = {\r\n  value: string;\r\n  label: string;\r\n  selected: boolean;\r\n  element: HTMLOptionElement;\r\n};\r\n\r\nexport class Dropdown {\r\n  dropdownElement: HTMLSelectElement;\r\n  optionElements: SelectFormattedOption[];\r\n  wrapperElement: HTMLDivElement;\r\n  labelElement: HTMLSpanElement;\r\n  optionsListElement: HTMLUListElement;\r\n\r\n  constructor(element: HTMLSelectElement) {\r\n    this.dropdownElement = element;\r\n    this.optionElements = getFormattedOptions(\r\n      document.querySelectorAll(\"option\")\r\n    );\r\n    this.wrapperElement = document.createElement(\"div\");\r\n    this.labelElement = document.createElement(\"span\");\r\n    this.optionsListElement = document.createElement(\"ul\");\r\n    setupDropdownElement(this);\r\n    element.style.display = \"none\";\r\n    element.after(this.wrapperElement);\r\n  }\r\n\r\n  get selectedOption() {\r\n    return this.optionElements.find(option => option.selected);\r\n  }\r\n\r\n  get selectedOptionIndex() {\r\n    return this.optionElements.indexOf(this.selectedOption);\r\n  }\r\n\r\n  selectValue(value: string) {\r\n    const newSelectedOption = this.optionElements.find(\r\n      option => option.value === value\r\n    );\r\n\r\n    const prevSelectedOption = this.selectedOption;\r\n    prevSelectedOption.selected = false;\r\n    prevSelectedOption.element.selected = false;\r\n\r\n    newSelectedOption.selected = true;\r\n    newSelectedOption.element.selected = true;\r\n\r\n    this.labelElement.innerText = newSelectedOption.label;\r\n\r\n    this.optionsListElement\r\n      .querySelector(`[data-value=\"${prevSelectedOption.value}\"]`)\r\n      .classList.remove(\"selected\");\r\n\r\n    const newSelectedElement = this.optionsListElement.querySelector(\r\n      `[data-value=\"${newSelectedOption.value}\"]`\r\n    );\r\n\r\n    newSelectedElement.classList.add(\"selected\");\r\n    newSelectedElement.scrollIntoView({ block: \"nearest\" });\r\n  }\r\n}\r\n\r\nlet debounceTimeout;\r\nlet searchTerm = \"\";\r\n\r\nconst setupDropdownElement = (select: Dropdown) => {\r\n  select.wrapperElement.classList.add(\"custom-select-wrapper\");\r\n  select.wrapperElement.tabIndex = 0;\r\n\r\n  select.labelElement.classList.add(\"custom-select-selected-value\");\r\n  select.labelElement.innerText = select.selectedOption.label;\r\n  select.wrapperElement.append(select.labelElement);\r\n\r\n  select.optionElements.forEach(optionElement => {\r\n    const option = document.createElement(\"li\");\r\n    option.classList.add(\"custom-select-options-list-item\");\r\n    option.classList.toggle(\"selected\", optionElement.selected);\r\n\r\n    option.addEventListener(\"click\", () => {\r\n      select.selectValue(optionElement.value);\r\n      select.optionsListElement.classList.remove(\"show\");\r\n    });\r\n    option.innerText = optionElement.label;\r\n    option.dataset.value = optionElement.value;\r\n    select.optionsListElement.append(option);\r\n  });\r\n\r\n  select.optionsListElement.classList.add(\"custom-select-options-list\");\r\n  select.wrapperElement.append(select.optionsListElement);\r\n\r\n  select.labelElement.addEventListener(\"click\", () => {\r\n    select.optionsListElement.classList.toggle(\"show\");\r\n  });\r\n\r\n  select.wrapperElement.addEventListener(\"blur\", () => {\r\n    select.optionsListElement.classList.remove(\"show\");\r\n  });\r\n\r\n  select.wrapperElement.addEventListener(\"keydown\", e => {\r\n    switch (e.code) {\r\n      case \"Space\":\r\n        select.optionsListElement.classList.toggle(\"show\");\r\n        break;\r\n\r\n      case \"ArrowUp\": {\r\n        const prevOption =\r\n          select.optionElements[select.selectedOptionIndex - 1];\r\n\r\n        if (prevOption) {\r\n          select.selectValue(prevOption.value);\r\n        }\r\n        break;\r\n      }\r\n      case \"ArrowDown\": {\r\n        const nextOption =\r\n          select.optionElements[select.selectedOptionIndex + 1];\r\n\r\n        if (nextOption) {\r\n          select.selectValue(nextOption.value);\r\n        }\r\n        break;\r\n      }\r\n      case \"Enter\":\r\n      case \"Escape\":\r\n        select.optionsListElement.classList.remove(\"show\");\r\n        break;\r\n      default: {\r\n        clearTimeout(debounceTimeout);\r\n        searchTerm += e.key;\r\n        debounceTimeout = setTimeout(() => {\r\n          searchTerm = \"\";\r\n        }, 500);\r\n\r\n        const searchedOption = select.optionElements.find(option => {\r\n          return option.label.toLowerCase().startsWith(searchTerm);\r\n        });\r\n\r\n        if (searchedOption) {\r\n          select.selectValue(searchedOption.value);\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst getFormattedOptions = (\r\n  options: HTMLOptionElement[] | NodeListOf<HTMLOptionElement>\r\n) => {\r\n  return [...options].map(option => {\r\n    return {\r\n      value: option.value,\r\n      label: option.label,\r\n      selected: option.selected,\r\n      element: option,\r\n    };\r\n  });\r\n};\r\n","import { Dropdown } from \"./select\";\r\n\r\nconst dropdownElements = document.querySelectorAll(\".dropdown\");\r\n\r\ndropdownElements.forEach(dropdownElement => {\r\n  new Dropdown(dropdownElement as HTMLSelectElement);\r\n});\r\n"],"names":["$1e5658e6edb9eff8fa65558598c72c69$export$30a13326eaae8e00","element","dropdownElement","optionElements","$1e5658e6edb9eff8fa65558598c72c69$var$getFormattedOptions","document","querySelectorAll","wrapperElement","createElement","labelElement","optionsListElement","$1e5658e6edb9eff8fa65558598c72c69$var$setupDropdownElement","this","style","display","after","find","option","selected","indexOf","selectedOption","[object Object]","value","newSelectedOption","prevSelectedOption","innerText","label","querySelector","classList","remove","newSelectedElement","add","scrollIntoView","block","$1e5658e6edb9eff8fa65558598c72c69$var$debounceTimeout","$1e5658e6edb9eff8fa65558598c72c69$var$searchTerm","select","tabIndex","append","forEach","optionElement","toggle","addEventListener","selectValue","dataset","e","code","prevOption","selectedOptionIndex","nextOption","clearTimeout","key","setTimeout","searchedOption","toLowerCase","startsWith","options","map"],"version":3,"file":"index.08078091.js.map"}